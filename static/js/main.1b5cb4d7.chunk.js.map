{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/container.module.css","components/ContactList/fade.module.css","components/ContactForm/Logo.module.css","components/Filter/Fadefilter.module.css","components/Container/Container.js","redux/tasks/taskActions.js","redux/tasks/taskOperations.js","redux/tasks/taskSelectors.js","components/ContactList/ContactItem.js","components/ContactList/ContacrList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","components/Notification/Notification.js","redux/tasks/tasksReducers.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","style","section","addContactsRequest","createAction","addContactsSucces","addContactsErr","fetchContactsRequest","fetchContactsSucces","fetchContactsErr","removeContactRequest","removeContactSucces","removeContactErr","changeFilter","addContact","name","number","dispatch","taskActions","axios","post","then","res","data","catch","err","fetchContacts","get","removeContact","id","delete","getFilter","state","tasks","filter","getContacts","items","contacts","toLowerCase","task","includes","contactId","find","contact","connect","ownProps","taskSelectors","taskOperations","item","type","button","onClick","TransitionGroup","component","list","map","CSSTransition","timeout","classNames","fade","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","reset","this","in","appear","unmountOnExit","logo","form","onSubmit","label","input","onChange","Component","mapDispatchToProps","onChangeFilter","length","fadeFilter","inputHeader","placeholder","App","onfetchContacts","title","message","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","notification","createReducer","action","payload","newContact","combineReducers","store","configureStore","reducer","taskReducer","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.1b5cb4d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__345QV\",\"label\":\"ContactForm_label__1qVmS\",\"input\":\"ContactForm_input__2Xyve\",\"button\":\"ContactForm_button__3UF0V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__240Y-\",\"item\":\"ContactList_item__1lzAQ\",\"button\":\"ContactList_button__3rqWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__27QT8\",\"inputHeader\":\"Filter_inputHeader__1mcPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"container_section__3F4iW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1Vm_6\",\"enterActive\":\"fade_enterActive__2PNbM\",\"exit\":\"fade_exit__2yuEX\",\"exitActive\":\"fade_exitActive__1Ppsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Logo_appear__2208k\",\"appearActive\":\"Logo_appearActive__3UacC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Fadefilter_appear__1wpwA\",\"appearActive\":\"Fadefilter_appearActive__3004e\"};","import React from \"react\";\r\nimport style from \"./container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <section className={style.section}>{children}</section>;\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContactsRequest = createAction(\"contact/addRequest\");\r\nconst addContactsSucces = createAction(\"contact/addSucces\");\r\nconst addContactsErr = createAction(\"contact/addErr\");\r\n\r\nconst fetchContactsRequest = createAction(\"contact/fetchRequest\");\r\nconst fetchContactsSucces = createAction(\"contact/fetchSucces\");\r\nconst fetchContactsErr = createAction(\"contact/fetchErr\");\r\n\r\nconst removeContactRequest = createAction(\"contact/removeRequest\");\r\nconst removeContactSucces = createAction(\"contact/removeSucces\");\r\nconst removeContactErr = createAction(\"contact/removeErr\");\r\n\r\nconst changeFilter = createAction(\"contact/changeFilter\");\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  changeFilter,\r\n  addContactsRequest,\r\n  addContactsSucces,\r\n  addContactsErr,\r\n  fetchContactsRequest,\r\n  fetchContactsSucces,\r\n  fetchContactsErr,\r\n  removeContactRequest,\r\n  removeContactSucces,\r\n  removeContactErr,\r\n};\r\n","import taskActions from \"./taskActions\";\r\nimport axios from \"axios\";\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  dispatch(taskActions.addContactsRequest());\r\n  axios\r\n    .post(\"http://localhost:2000/contacts\", { name, number })\r\n    .then((res) => {\r\n      dispatch(taskActions.addContactsSucces(res.data));\r\n    })\r\n    .catch((err) => dispatch(taskActions.addContactsErr(err)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(taskActions.fetchContactsRequest());\r\n  axios\r\n    .get(\"http://localhost:2000/contacts\")\r\n    .then(({ data }) => dispatch(taskActions.fetchContactsSucces(data)))\r\n    .catch((err) => dispatch(taskActions.fetchContactsErr(err)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(taskActions.removeContactRequest);\r\n  axios\r\n    .delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => dispatch(taskActions.removeContactSucces(id)))\r\n    .catch((err) => dispatch(taskActions.removeContactErr(err)));\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, fetchContacts, removeContact };\r\n","const getFilter = (state) => state.tasks.filter;\r\nconst getContacts = (state) => state.tasks.items;\r\n\r\nconst getVIsibleContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state).toLowerCase();\r\n  return contacts.filter((task) => task.name.toLowerCase().includes(filter));\r\n};\r\n\r\nconst getContactById = (state, contactId) => {\r\n  const contacts = getContacts(state);\r\n  return contacts.find((contact) => contact.id === contactId);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getFilter, getVIsibleContacts, getContactById };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport taskOperations from \"../../redux/tasks/taskOperations\";\r\nimport style from \"./ContactList.module.css\";\r\nimport taskSelectors from \"../../redux/tasks/taskSelectors\";\r\n\r\nfunction ContactItem({ name, number, removeContact, id }) {\r\n  return (\r\n    <li key={id} className={style.item}>\r\n      {name} {number}\r\n      <button type=\"button\" className={style.button} onClick={removeContact}>\r\n        Delete Contact\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\nContactItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = taskSelectors.getContactById(state, ownProps.id);\r\n  return { ...contact };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  removeContact: () => dispatch(taskOperations.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.css\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport fade from \"./fade.module.css\";\r\nimport taskSelectors from \"../../redux/tasks/taskSelectors\";\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <>\r\n    <TransitionGroup component=\"ul\" className={style.list}>\r\n      {contacts.map((contact) => (\r\n        <CSSTransition key={contact.id} timeout={250} classNames={fade}>\r\n          <ContactItem\r\n            id={contact.id}\r\n            // name={contact.name}\r\n            // number={contact.number}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  contacts: taskSelectors.getVIsibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport style from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport taskOperations from \"../../redux/tasks/taskOperations\";\r\nimport logo from \"./Logo.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={true}\r\n          appear\r\n          timeout={5000}\r\n          unmountOnExit\r\n          classNames={logo}\r\n        >\r\n          <h1>PhoneBook</h1>\r\n        </CSSTransition>\r\n        <form className={style.form} onSubmit={this.handleSubmit}>\r\n          <label className={style.label}>\r\n            Name\r\n            <input\r\n              className={style.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={style.label}>\r\n            Number\r\n            <input\r\n              className={style.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={style.button} type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: taskOperations.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport style from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport fadeFilter from \"./Fadefilter.module.css\";\r\nimport taskActions from \"../../redux/tasks/taskActions\";\r\nimport { connect } from \"react-redux\";\r\nimport taskSelectors from \"../../redux/tasks/taskSelectors\";\r\n\r\nconst Filter = ({ contacts, value, onChangeFilter }) => (\r\n  <>\r\n    {contacts.length > 1 && (\r\n      <CSSTransition\r\n        in={contacts.length > 1}\r\n        timeout={250}\r\n        appear\r\n        unmountOnExit\r\n        classNames={fadeFilter}\r\n      >\r\n        <div>\r\n          <p className={style.inputHeader}>Find contact by name</p>\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            value={value}\r\n            placeholder=\"find contact\"\r\n            onChange={(e) => onChangeFilter(e.target.value)}\r\n          />\r\n        </div>\r\n      </CSSTransition>\r\n    )}\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: taskSelectors.getFilter(state),\r\n  contacts: state.tasks.items,\r\n});\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: taskActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\nimport Container from \"./components/Container/Container\";\nimport ContactList from \"./components/ContactList/ContacrList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\n\nimport Filter from \"./components/Filter/Filter\";\nimport taskOperations from \"./redux/tasks/taskOperations\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onfetchContacts();\n  }\n  render() {\n    return (\n      <>\n        <Container title=\"PhoneBook\">\n          <ContactForm />\n        </Container>\n        <Container>\n          <Filter />\n          <ContactList />\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onfetchContacts: taskOperations.fetchContacts,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import message from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\n\r\nconst notification = () => message[\"error\"](\"Contact already exists\");\r\n\r\nmessage.options = {\r\n  closeButton: true,\r\n  debug: false,\r\n  newestOnTop: true,\r\n  progressBar: true,\r\n  positionClass: \"toast-top-right\",\r\n  preventDuplicates: false,\r\n  onclick: null,\r\n  showDuration: \"300\",\r\n  hideDuration: \"1000\",\r\n  timeOut: \"3000\",\r\n  extendedTimeOut: \"1000\",\r\n  showEasing: \"swing\",\r\n  hideEasing: \"linear\",\r\n  showMethod: \"fadeIn\",\r\n  hideMethod: \"fadeOut\",\r\n};\r\nexport default notification;\r\n","import { combineReducers } from \"redux\";\r\nimport taskActions from \"./taskActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport notification from \"../../components/Notification/Notification\";\r\n\r\nconst addContactAction = (state, action) => {\r\n  const newContact = action.payload;\r\n  const notificationName = state.find(\r\n    (contact) => contact.name === newContact.name\r\n  );\r\n  if (notificationName) {\r\n    notification();\r\n  } else {\r\n    return [...state, action.payload];\r\n  }\r\n};\r\n\r\nconst removeContactAction = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [taskActions.fetchContactsSucces]: (state, action) => action.payload,\r\n  [taskActions.addContactsSucces]: addContactAction,\r\n  [taskActions.removeContactSucces]: removeContactAction,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [taskActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport taskReducer from \"./tasks/tasksReducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    tasks: taskReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDom.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}